{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/rahul/dev/coding_mart/REACT_TASK/custiom-nextjs-dashboard/frontend/components/MainChart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport fetchData from '../service/api_request';\n\nvar MainChart = /*#__PURE__*/function (_Component) {\n  _inherits(MainChart, _Component);\n\n  var _super = _createSuper(MainChart);\n\n  function MainChart() {\n    var _this;\n\n    _classCallCheck(this, MainChart);\n\n    _this = _super.call(this);\n    _this.state = {\n      chartData: {}\n    };\n    return _this;\n  }\n\n  _createClass(MainChart, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getChartData();\n    }\n  }, {\n    key: \"dashboardPanelChartData\",\n    value: function dashboardPanelChartData(data) {\n      var result_data = [];\n      var yAxis = [];\n      data.forEach(function (item) {\n        if (item.Crop !== \"\" && item.Crop !== \"All Agriculture\") {\n          result_data.push(item[\"2011-12\"]);\n          yAxis.push(item.Crop);\n        }\n      });\n      return {\n        result_data: result_data,\n        yAxis: yAxis\n      };\n    }\n  }, {\n    key: \"getChartData\",\n    value: function getChartData() {\n      var _this2 = this;\n\n      fetchData().then(function (response) {\n        var d = _this2.dashboardPanelChartData(response);\n\n        _this2.setState({\n          chartData: {\n            labels: d.yAxis,\n            datasets: [{\n              label: 'status',\n              data: d.result_data,\n              backgroundColor: \"wheat\",\n              color: \"white\"\n            }]\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: this.state.chartData,\n          options: {\n            title: {\n              display: true,\n              text: \"Agriculture crop production\",\n              fontSize: 25\n            },\n            legend: {\n              display: false\n            },\n            layout: {\n              padding: {\n                left: 0,\n                right: 0\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return MainChart;\n}(Component);\n\nexport default MainChart;","map":{"version":3,"sources":["/home/rahul/dev/coding_mart/REACT_TASK/custiom-nextjs-dashboard/frontend/components/MainChart.js"],"names":["React","Component","Bar","fetchData","MainChart","state","chartData","getChartData","data","result_data","yAxis","forEach","item","Crop","push","then","response","d","dashboardPanelChartData","setState","labels","datasets","label","backgroundColor","color","title","display","text","fontSize","legend","layout","padding","left","right"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;IAEMC,S;;;;;AACJ,uBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAFY;AAKb;;;;yCAEoB;AACnB,WAAKC,YAAL;AACD;;;4CAEuBC,I,EAAM;AAE5B,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIC,KAAK,GAAG,EAAZ;AAEAF,MAAAA,IAAI,CAACG,OAAL,CAAa,UAACC,IAAD,EAAU;AACrB,YAAIA,IAAI,CAACC,IAAL,KAAc,EAAd,IAAoBD,IAAI,CAACC,IAAL,KAAc,iBAAtC,EAAyD;AACvDJ,UAAAA,WAAW,CAACK,IAAZ,CAAiBF,IAAI,CAAC,SAAD,CAArB;AACAF,UAAAA,KAAK,CAACI,IAAN,CAAWF,IAAI,CAACC,IAAhB;AACD;AACF,OALD;AAMA,aAAO;AACLJ,QAAAA,WAAW,EAAXA,WADK;AAELC,QAAAA,KAAK,EAALA;AAFK,OAAP;AAMD;;;mCAEc;AAAA;;AACbP,MAAAA,SAAS,GAAGY,IAAZ,CAAiB,UAACC,QAAD,EAAc;AAC7B,YAAMC,CAAC,GAAG,MAAI,CAACC,uBAAL,CAA6BF,QAA7B,CAAV;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AACZb,UAAAA,SAAS,EAAE;AACTc,YAAAA,MAAM,EAAEH,CAAC,CAACP,KADD;AAETW,YAAAA,QAAQ,EAAE,CACR;AACEC,cAAAA,KAAK,EAAE,QADT;AAEEd,cAAAA,IAAI,EAAES,CAAC,CAACR,WAFV;AAGEc,cAAAA,eAAe,EAAE,OAHnB;AAIEC,cAAAA,KAAK,EAAC;AAJR,aADQ;AAFD;AADC,SAAd;AAcD,OAhBD;AAiBD;;;6BAEQ;AACP,0BACE;AAAA,+BACE,QAAC,GAAD;AACE,UAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWC,SADnB;AAEE,UAAA,OAAO,EAAE;AACPmB,YAAAA,KAAK,EAAE;AACLC,cAAAA,OAAO,EAAE,IADJ;AAELC,cAAAA,IAAI,EAAE,6BAFD;AAGLC,cAAAA,QAAQ,EAAE;AAHL,aADA;AAMPC,YAAAA,MAAM,EAAE;AACNH,cAAAA,OAAO,EAAE;AADH,aAND;AASPI,YAAAA,MAAM,EAAE;AACNC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,IAAI,EAAE,CADC;AAEPC,gBAAAA,KAAK,EAAE;AAFA;AADH;AATD;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAwBD;;;;EA5EqBhC,S;;AA+ExB,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport fetchData from '../service/api_request';\n\nclass MainChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: {}\n    }\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  dashboardPanelChartData(data) {\n\n    let result_data = [];\n    let yAxis = [];\n\n    data.forEach((item) => {\n      if (item.Crop !== \"\" && item.Crop !== \"All Agriculture\") {\n        result_data.push(item[\"2011-12\"])\n        yAxis.push(item.Crop)\n      }\n    })\n    return {\n      result_data,\n      yAxis\n    }\n\n\n  }\n\n  getChartData() {\n    fetchData().then((response) => {\n      const d = this.dashboardPanelChartData(response)\n      this.setState({\n        chartData: {\n          labels: d.yAxis,\n          datasets: [\n            {\n              label: 'status',\n              data: d.result_data,\n              backgroundColor: \"wheat\",\n              color:\"white\"\n            }\n          ]\n        }\n      });\n\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Bar\n          data={this.state.chartData}\n          options={{\n            title: {\n              display: true,\n              text: \"Agriculture crop production\",\n              fontSize: 25\n            },\n            legend: {\n              display: false\n            },\n            layout: {\n              padding: {\n                left: 0,\n                right: 0\n              }\n            },\n          }}\n        />\n      </div>\n\n    );\n  }\n}\n\nexport default MainChart;\n"]},"metadata":{},"sourceType":"module"}