{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rahul/dev/coding_mart/REACT_TASK/custiom-nextjs-dashboard/frontend/components/MainChart.js\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport fetchData from '../service/api_request';\n\nclass MainChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getChartData();\n  } //this will return all agriculture data\n\n\n  dashboardPanelChartData(data) {\n    let result_data = [];\n    let yAxis = [];\n    data.forEach(item => {\n      if (item.Crop !== \"\" && item.Crop !== \"All Agriculture\") {\n        result_data.push(item[\"2011-12\"]);\n        yAxis.push(item.Crop);\n      }\n    });\n    return {\n      result_data,\n      yAxis\n    };\n  }\n\n  getChartData() {\n    //   //this will return http request data and add to state\n    fetchData().then(response => {\n      const d = this.dashboardPanelChartData(response);\n      this.setState({\n        chartData: {\n          labels: d.yAxis,\n          datasets: [{\n            label: 'status',\n            data: d.result_data,\n            backgroundColor: \"wheat\",\n            color: \"white\"\n          }]\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: this.state.chartData,\n        options: {\n          title: {\n            display: true,\n            text: \"Agriculture crop production\",\n            fontSize: 25\n          },\n          legend: {\n            display: false\n          },\n          layout: {\n            padding: {\n              left: 0,\n              right: 0\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MainChart;","map":{"version":3,"sources":["/home/rahul/dev/coding_mart/REACT_TASK/custiom-nextjs-dashboard/frontend/components/MainChart.js"],"names":["React","Component","Bar","fetchData","MainChart","constructor","state","chartData","componentDidMount","getChartData","dashboardPanelChartData","data","result_data","yAxis","forEach","item","Crop","push","then","response","d","setState","labels","datasets","label","backgroundColor","color","render","title","display","text","fontSize","legend","layout","padding","left","right"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,YAAL;AACD,GAV+B,CAYhC;;;AACAC,EAAAA,uBAAuB,CAACC,IAAD,EAAO;AAE5B,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,KAAK,GAAG,EAAZ;AAEAF,IAAAA,IAAI,CAACG,OAAL,CAAcC,IAAD,IAAU;AACrB,UAAIA,IAAI,CAACC,IAAL,KAAc,EAAd,IAAoBD,IAAI,CAACC,IAAL,KAAc,iBAAtC,EAAyD;AACvDJ,QAAAA,WAAW,CAACK,IAAZ,CAAiBF,IAAI,CAAC,SAAD,CAArB;AACAF,QAAAA,KAAK,CAACI,IAAN,CAAWF,IAAI,CAACC,IAAhB;AACD;AACF,KALD;AAMA,WAAO;AACLJ,MAAAA,WADK;AAELC,MAAAA;AAFK,KAAP;AAMD;;AACDJ,EAAAA,YAAY,GAAG;AACb;AACAN,IAAAA,SAAS,GAAGe,IAAZ,CAAkBC,QAAD,IAAc;AAC7B,YAAMC,CAAC,GAAG,KAAKV,uBAAL,CAA6BS,QAA7B,CAAV;AACA,WAAKE,QAAL,CAAc;AACZd,QAAAA,SAAS,EAAE;AACTe,UAAAA,MAAM,EAAEF,CAAC,CAACP,KADD;AAETU,UAAAA,QAAQ,EAAE,CACR;AACEC,YAAAA,KAAK,EAAE,QADT;AAEEb,YAAAA,IAAI,EAAES,CAAC,CAACR,WAFV;AAGEa,YAAAA,eAAe,EAAE,OAHnB;AAIEC,YAAAA,KAAK,EAAC;AAJR,WADQ;AAFD;AADC,OAAd;AAcD,KAhBD;AAiBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWC,SADnB;AAEE,QAAA,OAAO,EAAE;AACPqB,UAAAA,KAAK,EAAE;AACLC,YAAAA,OAAO,EAAE,IADJ;AAELC,YAAAA,IAAI,EAAE,6BAFD;AAGLC,YAAAA,QAAQ,EAAE;AAHL,WADA;AAMPC,UAAAA,MAAM,EAAE;AACNH,YAAAA,OAAO,EAAE;AADH,WAND;AASPI,UAAAA,MAAM,EAAE;AACNC,YAAAA,OAAO,EAAE;AACPC,cAAAA,IAAI,EAAE,CADC;AAEPC,cAAAA,KAAK,EAAE;AAFA;AADH;AATD;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AA7E+B;;AAgFlC,eAAehC,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport fetchData from '../service/api_request';\n\nclass MainChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: {}\n    }\n  }\n\n  componentDidMount() {\n    this.getChartData();\n  }\n\n  //this will return all agriculture data\n  dashboardPanelChartData(data) {\n\n    let result_data = [];\n    let yAxis = [];\n\n    data.forEach((item) => {\n      if (item.Crop !== \"\" && item.Crop !== \"All Agriculture\") {\n        result_data.push(item[\"2011-12\"])\n        yAxis.push(item.Crop)\n      }\n    })\n    return {\n      result_data,\n      yAxis\n    }\n\n\n  }\n  getChartData() {\n    //   //this will return http request data and add to state\n    fetchData().then((response) => {\n      const d = this.dashboardPanelChartData(response)\n      this.setState({\n        chartData: {\n          labels: d.yAxis,\n          datasets: [\n            {\n              label: 'status',\n              data: d.result_data,\n              backgroundColor: \"wheat\",\n              color:\"white\"\n            }\n          ]\n        }\n      });\n\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Bar\n          data={this.state.chartData}\n          options={{\n            title: {\n              display: true,\n              text: \"Agriculture crop production\",\n              fontSize: 25\n            },\n            legend: {\n              display: false\n            },\n            layout: {\n              padding: {\n                left: 0,\n                right: 0\n              }\n            },\n          }}\n        />\n      </div>\n\n    );\n  }\n}\n\nexport default MainChart;\n"]},"metadata":{},"sourceType":"module"}