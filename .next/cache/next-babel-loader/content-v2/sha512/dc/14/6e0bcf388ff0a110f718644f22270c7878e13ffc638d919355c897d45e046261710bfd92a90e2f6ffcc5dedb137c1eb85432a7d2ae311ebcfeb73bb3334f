{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/rahul/dev/coding_mart/REACT_TASK/custiom-nextjs-dashboard/frontend/components/YearsChart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport fetchData from '../service/api_request';\n\nvar YearsChart = /*#__PURE__*/function (_Component) {\n  _inherits(YearsChart, _Component);\n\n  var _super = _createSuper(YearsChart);\n\n  function YearsChart() {\n    var _this;\n\n    _classCallCheck(this, YearsChart);\n\n    _this = _super.call(this);\n    _this.state = {\n      chartData: {}\n    };\n    return _this;\n  }\n\n  _createClass(YearsChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getChartData();\n    } //this will return all yearchart\n\n  }, {\n    key: \"dashboardPanelChartData\",\n    value: function dashboardPanelChartData(data) {\n      var result_data = [];\n      var yAxis = [];\n      data.forEach(function (item) {\n        if (item.Crop === \"All Agriculture\") {\n          Object.entries(item).forEach(function (t, i) {\n            if (t[0] !== \"Crop\") {\n              yAxis.push(t[0]);\n              result_data.push(t[1]);\n            }\n          });\n        }\n      });\n      return {\n        result_data: result_data,\n        yAxis: yAxis\n      };\n    }\n  }, {\n    key: \"getChartData\",\n    value: function getChartData() {\n      var _this2 = this;\n\n      //this will return http request data and add to state\n      fetchData().then(function (response) {\n        var d = _this2.dashboardPanelChartData(response);\n\n        _this2.setState({\n          chartData: {\n            labels: d.yAxis,\n            datasets: [{\n              label: 'status',\n              data: d.result_data,\n              backgroundColor: \"grey\",\n              borderColor: \"black\"\n            }]\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: this.state.chartData,\n          options: {\n            title: {\n              display: true,\n              text: \"Last 8 Year Report\",\n              fontSize: 25\n            },\n            legend: {\n              display: false\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return YearsChart;\n}(Component);\n\nexport default YearsChart;","map":{"version":3,"sources":["/home/rahul/dev/coding_mart/REACT_TASK/custiom-nextjs-dashboard/frontend/components/YearsChart.js"],"names":["React","Component","Bar","fetchData","YearsChart","state","chartData","getChartData","data","result_data","yAxis","forEach","item","Crop","Object","entries","t","i","push","then","response","d","dashboardPanelChartData","setState","labels","datasets","label","backgroundColor","borderColor","title","display","text","fontSize","legend"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;IAEMC,U;;;;;AACF,wBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAFU;AAKb;;;;wCAEmB;AAChB,WAAKC,YAAL;AACH,K,CAEH;;;;4CAC0BC,I,EAAM;AAE1B,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIC,KAAK,GAAG,EAAZ;AAEAF,MAAAA,IAAI,CAACG,OAAL,CAAa,UAACC,IAAD,EAAU;AACnB,YAAIA,IAAI,CAACC,IAAL,KAAc,iBAAlB,EAAqC;AACjCC,UAAAA,MAAM,CAACC,OAAP,CAAeH,IAAf,EAAqBD,OAArB,CAA6B,UAACK,CAAD,EAAIC,CAAJ,EAAU;AACnC,gBAAID,CAAC,CAAC,CAAD,CAAD,KAAS,MAAb,EAAqB;AACjBN,cAAAA,KAAK,CAACQ,IAAN,CAAWF,CAAC,CAAC,CAAD,CAAZ;AACAP,cAAAA,WAAW,CAACS,IAAZ,CAAiBF,CAAC,CAAC,CAAD,CAAlB;AACH;AACJ,WALD;AAMH;AAEJ,OAVD;AAWA,aAAO;AACHP,QAAAA,WAAW,EAAXA,WADG;AAEHC,QAAAA,KAAK,EAALA;AAFG,OAAP;AAMH;;;mCAEc;AAAA;;AACf;AACIP,MAAAA,SAAS,GAAGgB,IAAZ,CAAiB,UAACC,QAAD,EAAc;AAC3B,YAAMC,CAAC,GAAG,MAAI,CAACC,uBAAL,CAA6BF,QAA7B,CAAV;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AACVjB,UAAAA,SAAS,EAAE;AACPkB,YAAAA,MAAM,EAAEH,CAAC,CAACX,KADH;AAEPe,YAAAA,QAAQ,EAAE,CACN;AACIC,cAAAA,KAAK,EAAE,QADX;AAEIlB,cAAAA,IAAI,EAAEa,CAAC,CAACZ,WAFZ;AAGIkB,cAAAA,eAAe,EAAC,MAHpB;AAIIC,cAAAA,WAAW,EAAE;AAJjB,aADM;AAFH;AADD,SAAd;AAcH,OAhBD;AAiBH;;;6BAEQ;AACL,0BACI;AAAA,+BACI,QAAC,GAAD;AACI,UAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWC,SADrB;AAEI,UAAA,OAAO,EAAE;AACLuB,YAAAA,KAAK,EAAE;AACHC,cAAAA,OAAO,EAAE,IADN;AAEHC,cAAAA,IAAI,EAAE,oBAFH;AAGHC,cAAAA,QAAQ,EAAE;AAHP,aADF;AAMLC,YAAAA,MAAM,EAAE;AACJH,cAAAA,OAAO,EAAE;AADL;AANH;AAFb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH;;;;EA7EoB7B,S;;AAgFzB,eAAeG,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport fetchData from '../service/api_request';\n\nclass YearsChart extends Component {\n    constructor() {\n        super();\n        this.state = {\n            chartData: {}\n        }\n    }\n\n    componentDidMount() {\n        this.getChartData();\n    }\n\n  //this will return all yearchart\n    dashboardPanelChartData(data) {\n\n        let result_data = [];\n        let yAxis = [];\n\n        data.forEach((item) => {\n            if (item.Crop === \"All Agriculture\") {\n                Object.entries(item).forEach((t, i) => {\n                    if (t[0] !== \"Crop\") {\n                        yAxis.push(t[0])\n                        result_data.push(t[1])\n                    }\n                })\n            }\n\n        })\n        return {\n            result_data,\n            yAxis\n        }\n\n\n    }\n\n    getChartData() {\n    //this will return http request data and add to state\n        fetchData().then((response) => {\n            const d = this.dashboardPanelChartData(response)\n            this.setState({\n                chartData: {\n                    labels: d.yAxis,\n                    datasets: [\n                        {\n                            label: 'status',\n                            data: d.result_data,\n                            backgroundColor:\"grey\",\n                            borderColor: \"black\"\n                        }\n                    ]\n                }\n            });\n\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Bar\n                    data={this.state.chartData}\n                    options={{\n                        title: {\n                            display: true,\n                            text: \"Last 8 Year Report\",\n                            fontSize: 25\n                        },\n                        legend: {\n                            display: false\n                        }\n                    }}\n                />\n            </div>\n\n        );\n    }\n}\n\nexport default YearsChart;"]},"metadata":{},"sourceType":"module"}