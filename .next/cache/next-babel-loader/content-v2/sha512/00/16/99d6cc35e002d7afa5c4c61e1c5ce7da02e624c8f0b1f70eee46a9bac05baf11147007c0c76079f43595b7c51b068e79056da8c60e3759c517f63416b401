{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rahul/dev/coding_mart/REACT_TASK/custiom-nextjs-dashboard/frontend/components/revenueChart.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport fetchData from '../service/api_request';\n\nclass RevenueChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: {}\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  dashboardPanelChartData(data) {\n    let result_data = [];\n    let yAxis = [];\n    data.forEach(item => {\n      if (item.Crop !== \"All Agriculture\" && item.Crop !== \"\") {\n        let sum = 0;\n        Object.entries(item).forEach((t, i) => {\n          if (t[0] === \"Crop\") {\n            yAxis.push(t[1]);\n          } else {\n            sum += t[1];\n          }\n        });\n        result_data.push(sum);\n      }\n    });\n    return {\n      result_data,\n      yAxis\n    };\n  }\n\n  getChartData() {\n    fetchData().then(response => {\n      const d = this.dashboardPanelChartData(response);\n      this.setState({\n        chartData: {\n          labels: d.yAxis,\n          datasets: [{\n            label: 'status',\n            data: d.result_data,\n            borderColor: \"rgba(0, 0, 0, 0.699)\",\n            backgroundColor: \" rgba(255, 0, 106, 0.5)\"\n          }]\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: this.state.chartData,\n        options: {\n          title: {\n            display: true,\n            text: \"All Product Year Revenue\",\n            fontSize: 25\n          },\n          legend: {\n            display: false\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RevenueChart;","map":{"version":3,"sources":["/home/rahul/dev/coding_mart/REACT_TASK/custiom-nextjs-dashboard/frontend/components/revenueChart.js"],"names":["React","Component","Line","fetchData","RevenueChart","constructor","state","chartData","componentWillMount","getChartData","dashboardPanelChartData","data","result_data","yAxis","forEach","item","Crop","sum","Object","entries","t","i","push","then","response","d","setState","labels","datasets","label","borderColor","backgroundColor","render","title","display","text","fontSize","legend"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACjCI,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,YAAL;AACH;;AAEDC,EAAAA,uBAAuB,CAACC,IAAD,EAAO;AAE1B,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,KAAK,GAAG,EAAZ;AAEAF,IAAAA,IAAI,CAACG,OAAL,CAAcC,IAAD,IAAU;AACnB,UAAIA,IAAI,CAACC,IAAL,KAAc,iBAAd,IAAmCD,IAAI,CAACC,IAAL,KAAc,EAArD,EAAyD;AACrD,YAAIC,GAAG,GAAG,CAAV;AACAC,QAAAA,MAAM,CAACC,OAAP,CAAeJ,IAAf,EAAqBD,OAArB,CAA6B,CAACM,CAAD,EAAIC,CAAJ,KAAU;AACnC,cAAID,CAAC,CAAC,CAAD,CAAD,KAAS,MAAb,EAAqB;AACjBP,YAAAA,KAAK,CAACS,IAAN,CAAWF,CAAC,CAAC,CAAD,CAAZ;AACH,WAFD,MAEO;AACHH,YAAAA,GAAG,IAAIG,CAAC,CAAC,CAAD,CAAR;AACH;AACJ,SAND;AAOAR,QAAAA,WAAW,CAACU,IAAZ,CAAiBL,GAAjB;AACH;AAEJ,KAbD;AAeA,WAAO;AACHL,MAAAA,WADG;AAEHC,MAAAA;AAFG,KAAP;AAMH;;AAEDJ,EAAAA,YAAY,GAAG;AACXN,IAAAA,SAAS,GAAGoB,IAAZ,CAAkBC,QAAD,IAAc;AAC3B,YAAMC,CAAC,GAAG,KAAKf,uBAAL,CAA6Bc,QAA7B,CAAV;AACA,WAAKE,QAAL,CAAc;AACVnB,QAAAA,SAAS,EAAE;AACPoB,UAAAA,MAAM,EAAEF,CAAC,CAACZ,KADH;AAEPe,UAAAA,QAAQ,EAAE,CACN;AACIC,YAAAA,KAAK,EAAE,QADX;AAEIlB,YAAAA,IAAI,EAAEc,CAAC,CAACb,WAFZ;AAGIkB,YAAAA,WAAW,EAAC,sBAHhB;AAIIC,YAAAA,eAAe,EAAE;AAJrB,WADM;AAFH;AADD,OAAd;AAcH,KAhBD;AAiBH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,IAAI,EAAE,KAAK1B,KAAL,CAAWC,SADrB;AAEI,QAAA,OAAO,EAAE;AACL0B,UAAAA,KAAK,EAAE;AACHC,YAAAA,OAAO,EAAE,IADN;AAEHC,YAAAA,IAAI,EAAE,0BAFH;AAGHC,YAAAA,QAAQ,EAAE;AAHP,WADF;AAMLC,UAAAA,MAAM,EAAE;AACJH,YAAAA,OAAO,EAAE;AADL;AANH;AAFb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AA/EgC;;AAkFrC,eAAe9B,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport fetchData from '../service/api_request';\n\nclass RevenueChart extends Component {\n    constructor() {\n        super();\n        this.state = {\n            chartData: {}\n        }\n    }\n\n    componentWillMount() {\n        this.getChartData();\n    }\n\n    dashboardPanelChartData(data) {\n\n        let result_data = [];\n        let yAxis = [];\n\n        data.forEach((item) => {\n            if (item.Crop !== \"All Agriculture\" && item.Crop !== \"\") {\n                let sum = 0;\n                Object.entries(item).forEach((t, i) => {\n                    if (t[0] === \"Crop\") {\n                        yAxis.push(t[1]);\n                    } else {\n                        sum += t[1];\n                    }\n                })\n                result_data.push(sum);\n            }\n\n        })\n\n        return {\n            result_data,\n            yAxis\n        }\n\n\n    }\n\n    getChartData() {\n        fetchData().then((response) => {\n            const d = this.dashboardPanelChartData(response)\n            this.setState({\n                chartData: {\n                    labels: d.yAxis,\n                    datasets: [\n                        {\n                            label: 'status',\n                            data: d.result_data,\n                            borderColor:\"rgba(0, 0, 0, 0.699)\",\n                            backgroundColor: \" rgba(255, 0, 106, 0.5)\"\n                        }\n                    ]\n                }\n            });\n\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Line\n                    data={this.state.chartData}\n                    options={{\n                        title: {\n                            display: true,\n                            text: \"All Product Year Revenue\",\n                            fontSize: 25\n                        },\n                        legend: {\n                            display: false\n                        }\n                    }}\n                />\n            </div>\n\n        );\n    }\n}\n\nexport default RevenueChart;"]},"metadata":{},"sourceType":"module"}